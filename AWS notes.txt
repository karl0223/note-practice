# AWS

- shared cloud platform

# ---------------------------------------------------------

# To Deploy REST API in AWS

- it needs multiple virtual machine
- virtual machine needs to have a load balancer
- EC2 (Elastic Compute Cloud)                                   # for virtual machine
- ELB (Elastic Load Balancer)                                   # for load balancer

- ELB helps balances the EC2 instances

# To create a group of EC2 instances

- ASG (Auto Scaling Group)
- ASG help to distribute EC2 instances across multiple zones


# Regions and Zones

- deploy vm's to different parts of the world
- increase availability of the app
- It helps to avoid application downtime by deploying it in different regions

# Manage Compute Services

- automatically setup the aws
- simple setup mentioned above  (deploy, EC2 instances, R & Z)

# Elastic BeanStalk

- automatically scale the EC2 instances based on the load
- no need to worry about the setup. It takes care of everything
- useful when dealing with Single application

# Container Orchestration

- used for complex REST API / many application

    # Kubernetes
        - EKS (Elastic Kubernetes Services)
        - ECS (Elastic Container Service)

        - create a cluster with multiple nodes
        - to de-cluster, deploy the application

    # AWS Fire Gate
        - serverless version of ECS
        - serverless container option

# Serverless

- AWS Lambda
- no need to worry about servers

# ---------------------------------------------------------

# Running Database in AWS

# Manage Database Services
    - choose between sql or no-sql database
    - transactional database / application
    - used for small updates                            # e.g Inserting 5 rows, deleting 10 rows, etc

    # Types
        # SQL (Relational Databases)
            - RDS               # limited scale -- 64 TB
            - Aurora            # Global Relational Database

        # No-SQL
            - DynamoDB          # Document database


# Analytical Database
    - Used for reporting / business intelligence application
    - Hadoop

    # Load the data in bulk
        - Get all the data in the Database (RDS) and load the data in bulk in Analytical Database
        - run complex queries

    # AWS Data Pipeline
        - Use AWS Data Pipeline to get the data in the RDS / Transactional database to Analytical Database

    # Run a Analytical Database in AWS
        - Redshift

# AWS Business Intelligence Solutions

    # AWS Quick Sight
        - used to read Analytical databases to get intelligence

# ---------------------------------------------------------

# Front End

- setup EC2 instances

# Use Case to attach Storage in Virtual Machine

    # EBS (Elastic Block Store)
        - Hard disk is automatically created when creating EC2 instances
        - EBS is the service used to create hard disk automatically
        - create hard disk and attack to virtual machine
        - can only attach to a single VM

    # EFS (Elastic File Store)
        - Create file shares to share in multiple EC2 instances / data center
        - can be shared in multiple devices

# Object Storage
    - create a bucket
    - store objects in key, value pair
    - any files can be stored
    - Use REST API to upload objects

    # Use Case
        - store achive files
        - can be used for temporary storage when migrating

    # Create a static website
        - recommended to expose static website
        - Use S3 (Simple Storage Service)
        - deploy the front end into a bucket to S3

# Route 53
    - Domain name Services in AWS
    - name a website                    # www.karl.com

# Cloud Front
    - Used to cache and distribute content from S3 around the world
    - used as distribution mechanism

# ---------------------------------------------------------

# Security

# Virtual Private Cloud (VPC)
    - control the entire traffic going in to the devices and to databases
    - has rules
    - has difference usecases to access different resources in VPC

    # Subnets
        - configure different rules for different things
        - rules to allow or reject

        # Public Subnets
            - Can be access publicly
            - all resources that are publicly available

        # Private Subnets
            - cannot be access from the outside world
            - put all resources that needs to be private

# Manage VPN
    - used to connect VPC and Data Center

    # IpSec Protocol
        - used to encrypt traffic

    # Create Dedicated Connection between VPC and Data Center
        - establish a direct connect

# ---------------------------------------------------------
